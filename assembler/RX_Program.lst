               ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;
               ;    Author    : Chanartip Soonthornwan                     ;
               ;    Student_ID: 014353883                                  ;
               ;    Email     : Chanartip.Soonthornwan@gmail.com           ;
               ;    Subject   : CECS460                                    ;
               ;    Instructor: John Tramel                                ;
               ;    Assignment: Project Three Receive Engine               ;
               ;                                                           ;
               ;    Current Version: 1.0                                   ;
               ;    Date      : April 16, 2018                             ;
               ;                                                           ;
               ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;
               
               ;=============================================================
               ; Data Constants
               ;=============================================================
               ZEROS           EQU     0000
               ONE             EQU     0001
               TWO             EQU     0002
               THREE           EQU     0003
               FOUR            EQU     0004
               FIVE            EQU     0005
               SIX             EQU     0006
               MAX_CHAR        EQU     0028
               TEN             EQU     000A
               ASCII           EQU     0030
               
               ;=============================================================
               ; ScratchPad alias
               ;=============================================================
               BANNER_BEGIN    EQU     0000
               BANNER_END      EQU     0097
               PROMPT_BEGIN    EQU     0097
               PROMPT_END      EQU     00B3
               HOMETOWN_BEGIN  EQU     00B3
               HOMETOWN_END    EQU     00CB
               CRLF_BEGIN      EQU     00CB
               CRLF_END        EQU     00CD
               BSSP_BEGIN      EQU     00CD
               BSSP_END        EQU     00D0
               COUNT_BEGIN     EQU     00D0
               COUNT_TEN       EQU     00D0
               COUNT_ONE       EQU     00D1
               COUNT_END       EQU     00D2
               
               ;=============================================================
               ; Register alias
               ;=============================================================
               TEMP_REG        EQU     R1
               COUNT           EQU     R2
               INDEX           EQU     R3
               LED             EQU     R4
               DELAY           EQU     R5
               DELAY2          EQU     R6
               PRINT_FLAG      EQU     R7
               ECHO_END        EQU     R8
               UART_STATUS     EQU     R9
               CHAR_COUNT      EQU     RA
               HOW_MANY        EQU     RB
               RESULT          EQU     RC
               
               ;=============================================================
               ; Port alias
               ;=============================================================
               DATA_PORT       EQU     0000
               STATUS_PORT     EQU     0001
               LED_PORT        EQU     0002
               
               ;=============================================================
               ; ASCII in uses
               ;=============================================================
               ASC_NULL   EQU   0000  ; NULL
               ASC_BS     EQU   0008  ; Back Space
               ASC_TAB    EQU   0009  ; Horizontal Tab
               ASC_LF     EQU   000A  ; <LF> Line Feed (new line)
               ASC_CR     EQU   000D  ; <CR> Carriage return
               ASC_STAR   EQU   002A  ; '*'  star
               ASC_AT     EQU   0040  ; '@'  at
               ASC_DOT    EQU   002E  ; '.'  dot
               ASC_SL     EQU   002F  ; '/'  slash
               ASC_EQ     EQU   003D  ; '='  equal sign
               ASC_DASH   EQU   002D  ; '-'  dash
               ASC_SP     EQU   0020  ; ' '  space
               ASC_LB     EQU   005B  ; '['  Left Bracket
               ASC_RB     EQU   005D  ; '];  Right Bracket
               ASC_0      EQU   0030
               ASC_1      EQU   0031
               ASC_2      EQU   0032
               ASC_3      EQU   0033
               ASC_4      EQU   0034
               ASC_5      EQU   0035
               ASC_6      EQU   0036
               ASC_7      EQU   0037
               ASC_8      EQU   0038
               ASC_9      EQU   0039
               ASC_A      EQU   0041
               ASC_B      EQU   0042
               ASC_C      EQU   0043
               ASC_D      EQU   0044
               ASC_E      EQU   0045
               ASC_F      EQU   0046
               ASC_G      EQU   0047
               ASC_H      EQU   0048
               ASC_I      EQU   0049
               ASC_J      EQU   004A
               ASC_K      EQU   004B
               ASC_L      EQU   004C
               ASC_M      EQU   004D
               ASC_N      EQU   004E
               ASC_O      EQU   004F
               ASC_P      EQU   0050
               ASC_Q      EQU   0051
               ASC_R      EQU   0052
               ASC_S      EQU   0053
               ASC_T      EQU   0054
               ASC_U      EQU   0055
               ASC_V      EQU   0056
               ASC_W      EQU   0057
               ASC_X      EQU   0058
               ASC_Y      EQU   0059
               ASC_Z      EQU   005A
               
               ;=============================================================
               ; Startup: Initialize the design at reset
               ;
               ;=============================================================
                           ADDRESS 0000
               INIT
               ; Initialize registers
                           LOAD    TEMP_REG, ZEROS
0000 AE01 0000
                           LOAD    COUNT, ZEROS
0002 AE02 0000
                           LOAD    INDEX, ZEROS
0004 AE03 0000
                           LOAD    LED, ZEROS
0006 AE04 0000
                           LOAD    PRINT_FLAG, FOUR
0008 AE07 0004
                           LOAD    UART_STATUS, ZEROS
000A AE09 0000
                           LOAD    CHAR_COUNT, ZEROS
000C AE0A 0000
               
                           CALL    BANNER_INIT
000E 8E00 0040
                           CALL    PROMPT_INIT
0010 8E00 0170
                           CALL    HOMETOWN_INIT
0012 8E00 0200
               
                           ; Initialize CRLF
                           LOAD    TEMP_REG, ASC_CR
0014 AE01 000D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0017 8203 0001
                           LOAD    TEMP_REG, ASC_LF
0019 AE01 000A
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
001C 8203 0001
               
                           ; Initialize BSSP
                           LOAD    TEMP_REG, ASC_BS
001E AE01 0008
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0021 8203 0001
                           LOAD    TEMP_REG, ASC_SP
0023 AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0026 8203 0001
                           LOAD    TEMP_REG, ASC_BS
0028 AE01 0008
                           STORE   TEMP_REG, INDEX
7631
               
                           AND     INDEX, ZEROS ; Reset to ZEROS to be ready to display
002B 8A03 0000
               
               START       ENINT
002D 1E00               
               ; Main Loop
               MAIN
                           ; CALL    BLINK_LED
                           JUMP    MAIN
002E A400 002e
               
               ;=============================================================
               ; Subroutine: BANNER_INIT
               ;       Displaying a banner with a prompt upon reset
               ;
               ;   Store a Banner to ScratchPad Memory
               ;   //////////////////////////////////////////////////
               ;       CECS460 PROJECT3
               ;       By  CHANARTIP SOONTHORNWAN
               ;   //////////////////////////////////////////////////
               ;
               ;   by incrementing the memory pointer each time storing a character
               ;   then reset the index to ZEROS for the next use in main program.
               ;
               ;   input registers: none
               ;   output registers: none
               ;=============================================================
                           ADDRESS 0040
               BANNER_INIT
                           LOAD    TEMP_REG, ASC_SL
0040 AE01 002F
               SL_50       STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0043 8203 0001
                           ADD     COUNT, ONE
0045 8202 0001
                           COMP    COUNT, 0031         ; if count < 0d50
0047 9802 0031
                           JUMPC   SL_50
0049 A600 0042
                           LOAD    COUNT, ZEROS
004B AE02 0000
               
                           COMP    INDEX, 0064         ; if index > 0d100
004D 9803 0064
                           JUMPNC  DONE_BANNER
004F A800 0154
               
                           LOAD    TEMP_REG, ASC_CR
0051 AE01 000D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0054 8203 0001
                           LOAD    TEMP_REG, ASC_LF
0056 AE01 000A
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0059 8203 0001
               
                           LOAD    TEMP_REG, ASC_TAB
005B AE01 0009
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
005E 8203 0001
                           LOAD    TEMP_REG, ASC_C
0060 AE01 0043
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0063 8203 0001
                           LOAD    TEMP_REG, ASC_E
0065 AE01 0045
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0068 8203 0001
                           LOAD    TEMP_REG, ASC_C
006A AE01 0043
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
006D 8203 0001
                           LOAD    TEMP_REG, ASC_S
006F AE01 0053
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0072 8203 0001
                           LOAD    TEMP_REG, ASC_4
0074 AE01 0034
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0077 8203 0001
                           LOAD    TEMP_REG, ASC_6
0079 AE01 0036
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
007C 8203 0001
                           LOAD    TEMP_REG, ASC_0
007E AE01 0030
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0081 8203 0001
                           LOAD    TEMP_REG, ASC_SP
0083 AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0086 8203 0001
                           LOAD    TEMP_REG, ASC_P
0088 AE01 0050
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
008B 8203 0001
                           LOAD    TEMP_REG, ASC_R
008D AE01 0052
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0090 8203 0001
                           LOAD    TEMP_REG, ASC_O
0092 AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0095 8203 0001
                           LOAD    TEMP_REG, ASC_J
0097 AE01 004A
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
009A 8203 0001
                           LOAD    TEMP_REG, ASC_E
009C AE01 0045
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
009F 8203 0001
                           LOAD    TEMP_REG, ASC_C
00A1 AE01 0043
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00A4 8203 0001
                           LOAD    TEMP_REG, ASC_T
00A6 AE01 0054
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00A9 8203 0001
                           LOAD    TEMP_REG, ASC_3
00AB AE01 0033
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00AE 8203 0001
                           LOAD    TEMP_REG, ASC_CR
00B0 AE01 000D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00B3 8203 0001
                           LOAD    TEMP_REG, ASC_LF
00B5 AE01 000A
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00B8 8203 0001
                           LOAD    TEMP_REG, ASC_TAB
00BA AE01 0009
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00BD 8203 0001
                           LOAD    TEMP_REG, ASC_B
00BF AE01 0042
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00C2 8203 0001
                           LOAD    TEMP_REG, ASC_Y
00C4 AE01 0059
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00C7 8203 0001
                           LOAD    TEMP_REG, ASC_CR
00C9 AE01 000D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00CC 8203 0001
                           LOAD    TEMP_REG, ASC_LF
00CE AE01 000A
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00D1 8203 0001
                           LOAD    TEMP_REG, ASC_TAB
00D3 AE01 0009
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00D6 8203 0001
                           LOAD    TEMP_REG, ASC_C
00D8 AE01 0043
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00DB 8203 0001
                           LOAD    TEMP_REG, ASC_H
00DD AE01 0048
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00E0 8203 0001
                           LOAD    TEMP_REG, ASC_A
00E2 AE01 0041
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00E5 8203 0001
                           LOAD    TEMP_REG, ASC_N
00E7 AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00EA 8203 0001
                           LOAD    TEMP_REG, ASC_A
00EC AE01 0041
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00EF 8203 0001
                           LOAD    TEMP_REG, ASC_R
00F1 AE01 0052
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00F4 8203 0001
                           LOAD    TEMP_REG, ASC_T
00F6 AE01 0054
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00F9 8203 0001
                           LOAD    TEMP_REG, ASC_I
00FB AE01 0049
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
00FE 8203 0001
                           LOAD    TEMP_REG, ASC_P
0100 AE01 0050
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0103 8203 0001
                           LOAD    TEMP_REG, ASC_SP
0105 AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0108 8203 0001
                           LOAD    TEMP_REG, ASC_S
010A AE01 0053
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
010D 8203 0001
                           LOAD    TEMP_REG, ASC_O
010F AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0112 8203 0001
                           LOAD    TEMP_REG, ASC_O
0114 AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0117 8203 0001
                           LOAD    TEMP_REG, ASC_N
0119 AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
011C 8203 0001
                           LOAD    TEMP_REG, ASC_T
011E AE01 0054
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0121 8203 0001
                           LOAD    TEMP_REG, ASC_H
0123 AE01 0048
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0126 8203 0001
                           LOAD    TEMP_REG, ASC_O
0128 AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
012B 8203 0001
                           LOAD    TEMP_REG, ASC_R
012D AE01 0052
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0130 8203 0001
                           LOAD    TEMP_REG, ASC_N
0132 AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0135 8203 0001
                           LOAD    TEMP_REG, ASC_W
0137 AE01 0057
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
013A 8203 0001
                           LOAD    TEMP_REG, ASC_A
013C AE01 0041
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
013F 8203 0001
                           LOAD    TEMP_REG, ASC_N
0141 AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0144 8203 0001
                           LOAD    TEMP_REG, ASC_CR
0146 AE01 000D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0149 8203 0001
                           LOAD    TEMP_REG, ASC_LF
014B AE01 000A
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
014E 8203 0001
               
                           LOAD    TEMP_REG, ASC_SL
0150 AE01 002F
                           JUMP    SL_50
0152 A400 0042
               
               DONE_BANNER
                           LOAD    TEMP_REG, ASC_CR
0154 AE01 000D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0157 8203 0001
                           LOAD    TEMP_REG, ASC_LF
0159 AE01 000A
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE          ; should be index for PROMPT BEGIN
015C 8203 0001
               
                           LOAD    COUNT, ZEROS
015E AE02 0000
               
                           RETURN
0160 3A00               
               ;=============================================================
               ; Subroutine:   PROMPT_INIT
               ;   Store a Prompt into the ScratchPad Memory
               ;
               ;   procedure:
               ;       - increment the index each time storing a character
               ;
               ;       PRESS ANY KEY TO CONTINUE...
               ;
               ;       - then reset the index to ZEROS for the next use in main
               ;
               ;   input registers: none
               ;   output registers: none
               ;=============================================================
                           ADDRESS 0170
               
               PROMPT_INIT
                           LOAD    TEMP_REG, ASC_P
0170 AE01 0050
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0173 8203 0001
                           LOAD    TEMP_REG, ASC_R
0175 AE01 0052
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0178 8203 0001
                           LOAD    TEMP_REG, ASC_E
017A AE01 0045
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
017D 8203 0001
                           LOAD    TEMP_REG, ASC_S
017F AE01 0053
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0182 8203 0001
                           LOAD    TEMP_REG, ASC_S
0184 AE01 0053
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0187 8203 0001
                           LOAD    TEMP_REG, ASC_SP
0189 AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
018C 8203 0001
                           LOAD    TEMP_REG, ASC_A
018E AE01 0041
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0191 8203 0001
                           LOAD    TEMP_REG, ASC_N
0193 AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0196 8203 0001
                           LOAD    TEMP_REG, ASC_Y
0198 AE01 0059
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
019B 8203 0001
                           LOAD    TEMP_REG, ASC_SP
019D AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01A0 8203 0001
                           LOAD    TEMP_REG, ASC_K
01A2 AE01 004B
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01A5 8203 0001
                           LOAD    TEMP_REG, ASC_E
01A7 AE01 0045
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01AA 8203 0001
                           LOAD    TEMP_REG, ASC_Y
01AC AE01 0059
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01AF 8203 0001
                           LOAD    TEMP_REG, ASC_SP
01B1 AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01B4 8203 0001
                           LOAD    TEMP_REG, ASC_T
01B6 AE01 0054
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01B9 8203 0001
                           LOAD    TEMP_REG, ASC_O
01BB AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01BE 8203 0001
                           LOAD    TEMP_REG, ASC_SP
01C0 AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01C3 8203 0001
                           LOAD    TEMP_REG, ASC_C
01C5 AE01 0043
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01C8 8203 0001
                           LOAD    TEMP_REG, ASC_O
01CA AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01CD 8203 0001
                           LOAD    TEMP_REG, ASC_N
01CF AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01D2 8203 0001
                           LOAD    TEMP_REG, ASC_T
01D4 AE01 0054
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01D7 8203 0001
                           LOAD    TEMP_REG, ASC_I
01D9 AE01 0049
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01DC 8203 0001
                           LOAD    TEMP_REG, ASC_N
01DE AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01E1 8203 0001
                           LOAD    TEMP_REG, ASC_U
01E3 AE01 0055
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01E6 8203 0001
                           LOAD    TEMP_REG, ASC_E
01E8 AE01 0045
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01EB 8203 0001
                           LOAD    TEMP_REG, ASC_DOT
01ED AE01 002E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01F0 8203 0001
                           LOAD    TEMP_REG, ASC_DOT
01F2 AE01 002E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
01F5 8203 0001
                           LOAD    TEMP_REG, ASC_DOT
01F7 AE01 002E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE          ; This INDEX should be HOMETOWN_BEGIN
01FA 8203 0001
               
                           RETURN
01FC 3A00               
               ;=============================================================
               ; Sub Routine: HOMETOWN_INIT
               ;       Store "MY HOMETOWN IS BANGKOK"
               ;
               ;=============================================================
                           ADDRESS 0200
               
               HOMETOWN_INIT
                           LOAD    TEMP_REG, ASC_M
0200 AE01 004D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0203 8203 0001
                           LOAD    TEMP_REG, ASC_Y
0205 AE01 0059
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0208 8203 0001
                           LOAD    TEMP_REG, ASC_SP
020A AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
020D 8203 0001
                           LOAD    TEMP_REG, ASC_H
020F AE01 0048
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0212 8203 0001
                           LOAD    TEMP_REG, ASC_O
0214 AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0217 8203 0001
                           LOAD    TEMP_REG, ASC_M
0219 AE01 004D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
021C 8203 0001
                           LOAD    TEMP_REG, ASC_E
021E AE01 0045
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0221 8203 0001
                           LOAD    TEMP_REG, ASC_T
0223 AE01 0054
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0226 8203 0001
                           LOAD    TEMP_REG, ASC_O
0228 AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
022B 8203 0001
                           LOAD    TEMP_REG, ASC_W
022D AE01 0057
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0230 8203 0001
                           LOAD    TEMP_REG, ASC_N
0232 AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0235 8203 0001
                           LOAD    TEMP_REG, ASC_SP
0237 AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
023A 8203 0001
                           LOAD    TEMP_REG, ASC_I
023C AE01 0049
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
023F 8203 0001
                           LOAD    TEMP_REG, ASC_S
0241 AE01 0053
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0244 8203 0001
                           LOAD    TEMP_REG, ASC_SP
0246 AE01 0020
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0249 8203 0001
                           LOAD    TEMP_REG, ASC_B
024B AE01 0042
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
024E 8203 0001
                           LOAD    TEMP_REG, ASC_A
0250 AE01 0041
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0253 8203 0001
                           LOAD    TEMP_REG, ASC_N
0255 AE01 004E
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0258 8203 0001
                           LOAD    TEMP_REG, ASC_G
025A AE01 0047
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
025D 8203 0001
                           LOAD    TEMP_REG, ASC_K
025F AE01 004B
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0262 8203 0001
                           LOAD    TEMP_REG, ASC_O
0264 AE01 004F
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0267 8203 0001
                           LOAD    TEMP_REG, ASC_K
0269 AE01 004B
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
026C 8203 0001
                           LOAD    TEMP_REG, ASC_CR
026E AE01 000D
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE
0271 8203 0001
                           LOAD    TEMP_REG, ASC_LF
0273 AE01 000A
                           STORE   TEMP_REG, INDEX
7631
                           ADD     INDEX, ONE    ; This INDEX should be CRLF_BEGIN
0276 8203 0001
               
                           RETURN
0278 3A00               
               ;=============================================================
               ; Subroutine: BLINK_LED
               ;       Blinking LEDs while idling the main loop
               ;
               ;   Procedure:
               ;       - Decrementing counters each time the routine is called.
               ;       0xFFFF * 0x0019 provides 60HZ for LED to visibly blinking.
               ;       - Once the both counter reach zeros, assigning new LED
               ;       values and then outputs the value through LED_PORT(0002).
               ;
               ;   input registers: none
               ;   output registers: none
               ;=============================================================
                           ADDRESS 0290
               BLINK_LED
                           LOAD    DELAY, FFFF
0290 AE05 FFFF
                           LOAD    DELAY2, 0019
0292 AE06 0019
               TAG
                           SUB     DELAY, ONE
0294 DC05 0001
                           JUMPNZ  TAG
0296 AC00 0294
                           LOAD    DELAY, FFFF
0298 AE05 FFFF
                           SUB     DELAY2, ONE
029A DC06 0001
                           JUMPNZ  TAG
029C AC00 0294
               
                           XOR     LED, 00FF
029E E804 00FF
                           OUTPUT  LED, LED_PORT
02A0 B804 0002
                           RETURN
02A2 3A00               ;=============================================================
               ; Routine: BIN_TO_ASCII
               ;
               ;   function: converting a 16-bit number into ASCII.
               ;       Dividing input CECS_COUNT by TEN_THOUSAND, ONE_THOUSAND,
               ;           ONE_HUNDREDS, TEN, and ONE then stores the
               ;           division at scratch-pad address 0011, 0012, 0013,
               ;           0014, and 0015 consequently.
               ;   pseudo code:
               ;       RESULT = CECS_COUNT;
               ;
               ;       NUM_TO_SUB = 10000;
               ;       HOW_MANY = FIND_IT(NUM_TO_SUB);
               ;       HOW_MANY += 0x0030;
               ;       MEM[COUNT_MSB] = HOW_MANY;
               ;
               ;       NUM_TO_SUB = 1000;
               ;       HOW_MANY = FIND_IT(NUM_TO_SUB);
               ;       HOW_MANY += 0x0030;
               ;       MEM[COUNT_3] = HOW_MANY;
               ;
               ;       NUM_TO_SUB = 100;
               ;       HOW_MANY = FIND_IT(NUM_TO_SUB);
               ;       HOW_MANY += 0x0030;
               ;       MEM[COUNT_2] = HOW_MANY;
               ;
               ;       NUM_TO_SUB = 10;
               ;       HOW_MANY = FIND_IT(NUM_TO_SUB);
               ;       HOW_MANY += 0x0030;
               ;       MEM[COUNT_1] = HOW_MANY;
               ;
               ;       RESULT += 0x0030;
               ;       MEM[COUNT_LSB] = RESULT;
               ;
               ;   input register:
               ;       CECS_COUNT: the 16-bit number to convert
               ;   output address:
               ;       MEM[COUNT_MSB(0011)]: to save ten thousandth
               ;       MEM[COUNT_3  (0012)]: to save thousandth.
               ;       MEM[COUNT_2  (0013)]: to save hundredth
               ;       MEM[COUNT_1  (0014)]: to save tenth
               ;       MEM[COUNT_LSB(0015)]: to save the rest.
               ;   temp register:
               ;       RESULT: temporary register for value from CECS_COUNT
               ;       NUM_TO_SUB: temporary register for denominator
               ;       HOW_MANY: division result
               ;
               ;=============================================================
               
               ; Address for BIN_TO_ASC
                           ADDRESS 0310
               
               BIN_TO_ASCII
                           LOAD    HOW_MANY, ZEROS
0310 AE0B 0000
                           LOAD    RESULT, COUNT
302C
               
               SUB_FIND
                           SUB     RESULT, TEN
0313 DC0C 000A
                           JUMPC   DONE_FIND
0315 A600 031b
                           ADD     HOW_MANY, ONE
0317 820B 0001
                           JUMP    SUB_FIND
0319 A400 0313
               DONE_FIND
                           ADD     RESULT, TEN
031B 820C 000A
                           ADD     HOW_MANY, ASCII
031D 820B 0030
                           STORE   HOW_MANY, COUNT_TEN
031F F40B 00D0
               
                           ADD     RESULT, ASCII
0321 820C 0030
                           STORE   RESULT, COUNT_ONE
0323 F40C 00D1
               
                           RETURN
0325 3A00               
               ;=============================================================
               ;   Subroutine: TX_FUNC
               ;
               ;   case(PRINT_FLAG)
               ;       BANNER:      PRINT_BANNER();
               ;       PROMPT:      PRINT_PROMPT();
               ;       HOMETOWN:    PRINT_HOMETOWN();
               ;       default:     PRINT_ECHO();
               ;   endcase
               ;
               ;=============================================================
                           ADDRESS 0330
               TX_FUNC
                           COMP    PRINT_FLAG, ZEROS
0330 9807 0000
                           RETURNZ
0332 4000               
                           FETCH   TEMP_REG, INDEX
7231
                           OUTPUT  TEMP_REG, DATA_PORT
0334 B801 0000
                           ADD     INDEX, ONE
0336 8203 0001
               
                           COMP    PRINT_FLAG, SIX
0338 9807 0006
                           JUMPZ   DISPLAY_COUNT
033A AA00 0351
                           COMP    PRINT_FLAG, FIVE
033C 9807 0005
                           JUMPZ   DISPLAY_BSSP
033E AA00 0359
                           COMP    PRINT_FLAG, FOUR
0340 9807 0004
                           JUMPZ   DISPLAY_BANNER
0342 AA00 035f
                           COMP    PRINT_FLAG, THREE
0344 9807 0003
                           JUMPZ   DISPLAY_PROMPT
0346 AA00 0365
                           COMP    PRINT_FLAG, TWO
0348 9807 0002
                           JUMPZ   DISPLAY_HOMETOWN
034A AA00 036b
                           COMP    PRINT_FLAG, ONE
034C 9807 0001
                           JUMPZ   DISPLAY_CRLF
034E AA00 0373
               
                           RETURN
0350 3A00               
               DISPLAY_COUNT
                           COMP    INDEX, COUNT_END
0351 9803 00D2
                           RETURNC
0353 3C00                           LOAD    INDEX, CRLF_BEGIN
0354 AE03 00CB
                           LOAD    PRINT_FLAG, ONE
0356 AE07 0001
                           RETURN
0358 3A00               
               DISPLAY_BSSP
                           COMP    INDEX, BSSP_END
0359 9803 00D0
                           RETURNC
035B 3C00                           LOAD    PRINT_FLAG, ZEROS
035C AE07 0000
                           RETURN
035E 3A00               
               DISPLAY_BANNER
                           COMP    INDEX, BANNER_END
035F 9803 0097
                           RETURNC
0361 3C00                           LOAD    PRINT_FLAG, THREE
0362 AE07 0003
                           RETURN
0364 3A00               
               DISPLAY_PROMPT
                           COMP    INDEX, PROMPT_END
0365 9803 00B3
                           RETURNC
0367 3C00                           LOAD    PRINT_FLAG, ZEROS
0368 AE07 0000
                           RETURN
036A 3A00               
               DISPLAY_HOMETOWN
                           COMP    INDEX, HOMETOWN_END
036B 9803 00CB
                           RETURNC
036D 3C00                           LOAD    INDEX, PROMPT_BEGIN
036E AE03 0097
                           LOAD    PRINT_FLAG, THREE
0370 AE07 0003
                           RETURN
0372 3A00               
               DISPLAY_CRLF
                           COMP    INDEX, CRLF_END
0373 9803 00CD
                           RETURNC
0375 3C00                           LOAD    INDEX, PROMPT_BEGIN
0376 AE03 0097
                           LOAD    PRINT_FLAG, THREE
0378 AE07 0003
                           RETURN
037A 3A00               
               
               ;=============================================================
               ;   Subroutine: RX_FUNC
               ;
               ;
               ;
               ;=============================================================
                           ADDRESS 0400
               RX_FUNC
                           COMP    PRINT_FLAG, ZEROS
0400 9807 0000
                           RETURNNZ
0402 4200               
                           INPUT   TEMP_REG, DATA_PORT
0403 A201 0000
                           COMP    TEMP_REG, ZEROS
0405 9801 0000
                           RETURNZ
0407 4000               
                           COMP    TEMP_REG, ASC_STAR
0408 9801 002A
                           JUMPZ   SET_HOMETOWN
040A AA00 0421
               
                           COMP    TEMP_REG, ASC_CR
040C 9801 000D
                           JUMPZ   SET_CRLF
040E AA00 042c
               
                           COMP    TEMP_REG, ASC_BS
0410 9801 0008
                           JUMPZ   SET_BSSP
0412 AA00 0437
               
                           COMP    TEMP_REG, ASC_AT
0414 9801 0040
                           JUMPZ   SET_AT
0416 AA00 0445
               
               SET_ECHO
                           COMP    COUNT, MAX_CHAR
0418 9802 0028
                           JUMPZ   SET_CRLF
041A AA00 042c
                           ADD     COUNT, ONE
041C 8202 0001
                           OUTPUT  TEMP_REG, DATA_PORT
041E B801 0000
               
                           RETURN
0420 3A00               
               
               SET_HOMETOWN
                           LOAD    PRINT_FLAG, TWO
0421 AE07 0002
                           LOAD    INDEX, HOMETOWN_BEGIN
0423 AE03 00B3
                           LOAD    TEMP_REG, ASC_NULL
0425 AE01 0000
                           OUTPUT  TEMP_REG, DATA_PORT
0427 B801 0000
                           LOAD    COUNT, ZEROS
0429 AE02 0000
                           RETURN
042B 3A00               
               SET_CRLF
                           LOAD    PRINT_FLAG, ONE
042C AE07 0001
                           LOAD    INDEX, CRLF_BEGIN
042E AE03 00CB
                           LOAD    TEMP_REG, ASC_NULL
0430 AE01 0000
                           OUTPUT  TEMP_REG, DATA_PORT
0432 B801 0000
                           LOAD    COUNT, ZEROS
0434 AE02 0000
                           RETURN
0436 3A00               
               SET_BSSP
                           COMP    COUNT, ZEROS
0437 9802 0000
                           RETURNZ
0439 4000                           LOAD    PRINT_FLAG, FIVE
043A AE07 0005
                           LOAD    INDEX, BSSP_BEGIN
043C AE03 00CD
                           LOAD    TEMP_REG, ASC_NULL
043E AE01 0000
                           OUTPUT  TEMP_REG, DATA_PORT
0440 B801 0000
                           SUB     COUNT, ONE
0442 DC02 0001
                           RETURN
0444 3A00               
               SET_AT
                           CALL    BIN_TO_ASCII
0445 8E00 0310
                           LOAD    PRINT_FLAG, SIX
0447 AE07 0006
                           LOAD    INDEX, COUNT_BEGIN
0449 AE03 00D0
                           LOAD    TEMP_REG, ASC_NULL
044B AE01 0000
                           OUTPUT  TEMP_REG, DATA_PORT
044D B801 0000
                           LOAD    COUNT, ZEROS
044F AE02 0000
                           RETURN
0451 3A00               
               ;=============================================================
               ; Sub Routine: Interrupt Service Routine(ISR)
               ;       Checking UART STATUS if the UART is ready to
               ;       transmit or receive a character
               ;       If the Transmit Engine is ready, (UART_STATUS & 0x0002) == 1
               ;       If the Receive Engine is ready, (UART_STATUS & 0x0001) == 1
               ;       Where UART_STATUS is an 8-bit data from UART data
               ;       read from STATUS_PORT(0001)
               ;       UART_STATUS consists
               ;           {3'b0, w_ovf, w_ferr, w_perr, w_txrdy, w_rxrdy};
               ;       which ovf    - overflow flag
               ;             ferr   - framing error
               ;             perr   - parity bit error
               ;           * txrdy  - transmit ready
               ;           * rxrdy  - receive ready
               ;
               ;   Procedure:
               ;       UART_STATUS = INPUT[STATUS_PORT];
               ;       if(UART_STATUS&0x0001==1)
               ;           READ_DATA_FUNC();
               ;       else if(UART_STATUS&0x0002==1)
               ;           PRINT_DATA_FUNC();
               ;       else{
               ;           if(INIT == TWO) DISPLAY_BANNER(); else
               ;           if(INIT == ONE) DISPLAY_PROMPT();
               ;           else INIT = 0;
               ;       }
               ;
               ;   input registers: none
               ;       UART_STATUS - Reading the current UART status from UART;
               ;                     then store it for if-statement.
               ;   output registers: none
               ;
               ;=============================================================
                           ADDRESS 0E00
               ISR
                           INPUT   UART_STATUS, STATUS_PORT
0E00 A209 0001
                           AND     UART_STATUS, THREE          ; check TX_rdy & RX_rdy
0E02 8A09 0003
               
                           COMP    UART_STATUS, THREE
0E04 9809 0003
                           JUMPZ   CALL_BOTH
0E06 AA00 0e11
               
                           COMP    UART_STATUS, TWO
0E08 9809 0002
                           CALLZ   TX_FUNC                     ; TX is ready
0E0A 9400 0330
               
                           COMP    UART_STATUS, ONE
0E0C 9809 0001
                           CALLZ   RX_FUNC                     ; RX is ready
0E0E 9400 0400
               
                           RETEN
0E10 4600               
               CALL_BOTH
                           CALL    TX_FUNC                     ; prioritize to TX
0E11 8E00 0330
                           CALL    RX_FUNC
0E13 8E00 0400
                           RETEN
0E15 4600               
               ;=============================================================
               ;   ISR vectored through 0FFE
               ;   Jump to ISR routine
               ;=============================================================
               
                           ADDRESS 0FFE
               
               ENDIT
                           JUMP ISR
0FFE A400 0e00
               
                           END
               
